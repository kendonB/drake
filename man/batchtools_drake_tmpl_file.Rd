% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel_ui.R
\name{batchtools_drake_tmpl_file}
\alias{batchtools_drake_tmpl_file}
\title{Function \code{batchtools_drake_tmpl_file}}
\usage{
batchtools_drake_tmpl_file(example = drake::drake_examples(), to = getwd(),
  overwrite = FALSE)
}
\arguments{
\item{example}{Name of the drake example
from which to take the template file.
Must be listed in \code{\link{drake_examples}()}.}

\item{to}{Character vector, where to write the file.}

\item{overwrite}{Logical, whether to overwrite an existing file of the
same name.}
}
\value{
\code{NULL} is returned,
but a batchtools template file is written.
}
\description{
Write the batchtools template file
from one of the examples. If there are multiple files,
only the first one (alphabetically) is written.
}
\examples{
\dontrun{
load_basic_example() # Load the canonical example.
# List the drake examples. Only some have template files.
drake_examples()
# Write the batchtools template file from the SLURM example.
batchtools_drake_tmpl_file("slurm") # Writes batchtools.slurm.tmpl.
# Find batchtools.slurm.tmpl with the rest of the example's files.
drake_example("slurm") # Writes a new 'slurm' folder with more files.
# Run the basic example with a
# SLURM-powered parallel backend. Requires SLURM.
library(future.batchtools)
future::plan(batchtools_slurm(template = "batchtools.slurm.tmpl"))
make(my_plan, parallelism = "future_lapply")
}
}
\seealso{
\code{\link{drake_examples}}, \code{\link{drake_example}},
\code{\link{shell_file}}
}
